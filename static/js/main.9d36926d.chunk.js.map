{"version":3,"sources":["components/profile/Profile.module.css","components/friends/FriendsList.module.css","components/statistic/Statistic.module.css","components/transactions/TransactionHistory.module.css","components/container/container.module.css","components/friends/Friend.js","helpers/FriendIsOnline-helper.js","components/friends/FriendsList.js","components/statistic/Statistic.js","helpers/RandomColor-helper.js","components/profile/Profile.js","components/transactions/TransactionHistory.js","components/container/container.js","App.js","index.js"],"names":["module","exports","Friend","status","avatar","name","isOnline","id","className","s","item","style","color","src","alt","width","FriendsList","friends","friendList","map","defaultProps","Statistics","title","stats","statistics","toUpperCase","statList","percentage","label","statisticItem","backgroundColor","Math","random","Profile","tag","location","followers","views","likes","profile","description","statsItem","quantity","TransactionHistory","transactions","transTable","table","tableBody","transaction","tableData","type","amount","currency","Container","children","container","App","user","statisticalData","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.9d36926d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__mBUB0\",\"description\":\"Profile_description__2k_AR\",\"avatar\":\"Profile_avatar__3WCE-\",\"name\":\"Profile_name__1wbXQ\",\"tag\":\"Profile_tag__34aOj\",\"location\":\"Profile_location__yqg4T\",\"stats\":\"Profile_stats__1n7Rb\",\"statsItem\":\"Profile_statsItem__1_4mh\",\"label\":\"Profile_label__29IIQ\",\"quantity\":\"Profile_quantity__Af3ND\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"FriendsList_friends__1Ap4f\",\"item\":\"FriendsList_item__3rE3r\",\"avatar\":\"FriendsList_avatar__2bzxd\",\"status\":\"FriendsList_status__NFrbU\",\"name\":\"FriendsList_name__2nul8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistic_statistics__8M2Ue\",\"title\":\"Statistic_title__1ploi\",\"statisticItem\":\"Statistic_statisticItem__kaDxS\",\"label\":\"Statistic_label__1oSxo\",\"percentage\":\"Statistic_percentage__2wxqp\",\"statList\":\"Statistic_statList__23js0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transTable\":\"TransactionHistory_transTable__Dxqbk\",\"tableData\":\"TransactionHistory_tableData__1oUIO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__1wCkX\"};","import s from './FriendsList.module.css';\nimport PropTypes from 'prop-types';\nimport { friendIsOnline } from '../../helpers/FriendIsOnline-helper';\n\nexport default function Friend({ avatar, name, isOnline, id }) {\n  return (\n    <div key={id} className={s.item}>\n      {' '}\n      <span className={s.status} style={{ color: friendIsOnline(isOnline) }}>\n        {' '}\n        ‚óè\n      </span>\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </div>\n  );\n}\nFriend.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n};\nFriend.defaultProps = {\n  avatar:\n    'https://st.depositphotos.com/1779253/5140/v/600/depositphotos_51402215-stock-illustration-male-avatar-profile-picture-use.jpg',\n  name: 'User name',\n  isOnline: false,\n};\n","export function friendIsOnline(status) {\n  if (status) {\n    return '#2ECC71';\n  } else {\n    return '#E74C3C';\n  }\n}\n","import s from './FriendsList.module.css';\nimport PropTypes from 'prop-types';\nimport Friend from './Friend';\n\nexport default function FriendsList({ friends }) {\n  return (\n    <div className={s.friends}>\n      <ul className={s.friendList}>\n        {friends.map(({ avatar, name, isOnline, id }) => (\n          <li key={id}>\n            <Friend avatar={avatar} name={name} isOnline={isOnline} id={id} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nFriendsList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      // avatar: PropTypes.string.isRequired,\n      // name: PropTypes.string.isRequired,\n      // isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\nimport s from './Statistic.module.css';\nimport { createRandomColor } from '../../helpers/RandomColor-helper';\n\nexport default function Statistics({ title, stats }) {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title.toUpperCase()}</h2>}\n\n      <ul className={s.statList}>\n        {stats.map(({ id, percentage, label }) => (\n          <li\n            key={id}\n            className={s.statisticItem}\n            style={{ backgroundColor: createRandomColor() }}\n          >\n            <span className={s.label}>{label}</span>\n            <span className={s.percentage}>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }).isRequired,\n  ),\n};\n","export const createRandomColor = () => {\n  return `rgb(${(Math.random() * 255) << 0}, ${(Math.random() * 255) << 0}, ${\n    (Math.random() * 255) << 0\n  })`;\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./Profile.module.css\";\n\nexport default function Profile({\n  name,\n  tag,\n  location,\n  avatar,\n  stats: { followers, views, likes },\n}) {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt={name} className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.statsItem}>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{followers}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{views}</span>\n        </li>\n        <li className={s.statsItem}>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.defaultProps = {\n  avatar:\n    \"https://st.depositphotos.com/1779253/5140/v/600/depositphotos_51402215-stock-illustration-male-avatar-profile-picture-use.jpg\",\n};\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  stats: PropTypes.exact({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nexport default function TransactionHistory({ transactions }) {\n  return (\n    <div className={s.transTable}>\n      <table>\n        <thead className={s.table}>\n          <tr>\n            <th>Type</th>\n            <th>Amount</th>\n            <th>Currency</th>\n          </tr>\n        </thead>\n        <tbody className={s.tableBody}>\n          {transactions.map(transaction => (\n            <tr key={transaction.id}>\n              <td className={s.tableData}>{transaction.type}</td>\n              <td className={s.tableData}>{transaction.amount}</td>\n              <td className={s.tableData}>{transaction.currency}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nTransactionHistory.defaultProps = {\n  type: 'Type',\n  currency: 'Currency',\n};\n","import s from './container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","import FriendsList from './components/friends/FriendsList';\nimport Statistics from './components/statistic/Statistic';\nimport Profile from './components/profile/Profile';\nimport TransactionHistory from './components/transactions/TransactionHistory';\nimport user from '././jsonFiles/user.json';\nimport statisticalData from '././jsonFiles/statistical-data.json';\nimport transaction from '././jsonFiles/transactions.json';\nimport friends from '././jsonFiles/friends.json';\nimport Container from './components/container/container';\n\nexport default function App() {\n  return (\n    <Container>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <FriendsList friends={friends} />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <TransactionHistory transactions={transaction} />\n    </Container>\n  );\n}\n","import \"./index.css\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}