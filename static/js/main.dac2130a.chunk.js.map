{"version":3,"sources":["components/profile/Profile.module.css","components/friends/Friend.module.css","components/statistic/Statistic.module.css","components/transactions/Transaction.module.css","components/friends/friendsList.js","components/statistic/statistics.js","components/profile/Profile.js","components/transactions/TransactionHistory.js","App.js","index.js"],"names":["module","exports","FriendsList","friends","className","styles","friendList","map","friend","item","status","style","color","isOnline","avatar","src","alt","name","width","id","defaultProps","Statistics","title","stats","stat","statistics","toUpperCase","statList","percentage","label","statisticItem","backgroundColor","Math","random","Profile","tag","location","followers","views","likes","profile","description","statsItem","quantity","TransactionHistory","transactions","transTable","table","tableBody","transaction","tableData","type","amount","currency","App","user","statisticalData","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.dac2130a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__mBUB0\",\"description\":\"Profile_description__2k_AR\",\"avatar\":\"Profile_avatar__3WCE-\",\"name\":\"Profile_name__1wbXQ\",\"tag\":\"Profile_tag__34aOj\",\"location\":\"Profile_location__yqg4T\",\"stats\":\"Profile_stats__1n7Rb\",\"statsItem\":\"Profile_statsItem__1_4mh\",\"label\":\"Profile_label__29IIQ\",\"quantity\":\"Profile_quantity__Af3ND\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friend_friends__yj5Ap\",\"item\":\"Friend_item__3Z5wG\",\"avatar\":\"Friend_avatar__sYmfd\",\"status\":\"Friend_status__1Jq-s\",\"name\":\"Friend_name__2H1K6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistic_statistics__8M2Ue\",\"title\":\"Statistic_title__1ploi\",\"statisticItem\":\"Statistic_statisticItem__kaDxS\",\"label\":\"Statistic_label__1oSxo\",\"percentage\":\"Statistic_percentage__2wxqp\",\"statList\":\"Statistic_statList__23js0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transTable\":\"Transaction_transTable__1ZGyL\",\"tableData\":\"Transaction_tableData__3a1fF\"};","import styles from \"./Friend.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction friendIsOnline(status) {\n  if (status) {\n    return \"#2ECC71\";\n  } else {\n    return \"#E74C3C\";\n  }\n}\nexport default function FriendsList({ friends }) {\n  return (\n    <div className={styles.friends}>\n      <ul className={styles.friendList}>\n        {friends.map((friend) => (\n          <li className={styles.item} key={friend.id}>\n            {\" \"}\n            <span\n              className={styles.status}\n              style={{ color: friendIsOnline(friend.isOnline) }}\n            >\n              {\" \"}\n              ‚óè\n            </span>\n            <img\n              className={styles.avatar}\n              src={friend.avatar}\n              alt={friend.name}\n              width=\"48\"\n            />\n            <p className={styles.name}>{friend.name}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nFriendsList.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n  id: PropTypes.number,\n};\nFriendsList.defaultProps = {\n  avatar:\n    \"https://st.depositphotos.com/1779253/5140/v/600/depositphotos_51402215-stock-illustration-male-avatar-profile-picture-use.jpg\",\n  name: \"User name\",\n  isOnline: false,\n};\n","import PropTypes from \"prop-types\";\nimport stat from \"./Statistic.module.css\";\n\nexport default function Statistics({ title, stats }) {\n  const createRandomColor = () => {\n    return `rgb(${(Math.random() * 255) << 0}, ${(Math.random() * 255) << 0}, ${\n      (Math.random() * 255) << 0\n    })`;\n  };\n  return (\n    <section className={stat.statistics}>\n      {title && <h2 className={stat.title}>{title.toUpperCase()}</h2>}\n\n      <ul className={stat.statList}>\n        {stats.map(({ id, percentage, label }) => (\n          <li\n            key={id}\n            className={stat.statisticItem}\n            style={{ backgroundColor: createRandomColor() }}\n          >\n            <span className={stat.label}>{label}</span>\n            <span className={stat.percentage}>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n","import PropTypes from \"prop-types\";\nimport styles from \"./Profile.module.css\";\n\nexport default function Profile({\n  name,\n  tag,\n  location,\n  avatar,\n  stats: { followers, views, likes },\n}) {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt={name} className={styles.avatar} />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{followers}</span>\n        </li>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{views}</span>\n        </li>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.defaultProps = {\n  avatar:\n    \"https://st.depositphotos.com/1779253/5140/v/600/depositphotos_51402215-stock-illustration-male-avatar-profile-picture-use.jpg\",\n};\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  stats: PropTypes.exact({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }).isRequired,\n};\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Transaction.module.css\";\r\n\r\nexport default function TransactionHistory({ transactions }) {\r\n  return (\r\n    <div className={styles.transTable}>\r\n      <table>\r\n        <thead className={styles.table}>\r\n          <tr>\r\n            <th>Type</th>\r\n            <th>Amount</th>\r\n            <th>Currency</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className={styles.tableBody}>\r\n          {transactions.map((transaction) => (\r\n            <tr key={transaction.id}>\r\n              <td className={styles.tableData}>{transaction.type}</td>\r\n              <td className={styles.tableData}>{transaction.amount}</td>\r\n              <td className={styles.tableData}>{transaction.currency}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nTransactionHistory.propTypes = {\r\n  transactions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nTransactionHistory.defaultProps = {\r\n  type: \"Type\",\r\n  currency: \"Currency\",\r\n};\r\n","import FriendsList from \"./components/friends/friendsList\";\nimport Statistics from \"./components/statistic/statistics\";\nimport Profile from \"./components/profile/Profile\";\nimport TransactionHistory from \"./components/transactions/TransactionHistory\";\nimport user from \"././jsonFiles/user.json\";\nimport statisticalData from \"././jsonFiles/statistical-data.json\";\nimport transaction from \"././jsonFiles/transactions.json\";\nimport friends from \"././jsonFiles/friends.json\";\n\nexport default function App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <FriendsList friends={friends} />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n      <TransactionHistory transactions={transaction} />\n    </div>\n  );\n}\n","import \"./index.css\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}